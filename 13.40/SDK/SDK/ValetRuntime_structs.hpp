#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: ValetRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum ValetRuntime.EVehicleClass
// NumValues: 0x0005
enum class EVehicleClass : uint8
{
	Sedan                                    = 0,
	Sport                                    = 1,
	PickupTruck                              = 2,
	SemiTruck                                = 3,
	EVehicleClass_MAX                        = 4,
};

// Enum ValetRuntime.ETireSurfaces
// NumValues: 0x0006
enum class ETireSurfaces : uint8
{
	Road                                     = 0,
	Dirt                                     = 1,
	Grass                                    = 2,
	Air                                      = 3,
	Water                                    = 4,
	ETireSurfaces_MAX                        = 5,
};

// Enum ValetRuntime.ETireLocations
// NumValues: 0x0005
enum class ETireLocations : uint8
{
	FrontRight                               = 0,
	FrontLeft                                = 1,
	BackRight                                = 2,
	BackLeft                                 = 3,
	ETireLocations_MAX                       = 4,
};

// Enum ValetRuntime.EPoppedTireReactionStates
// NumValues: 0x0008
enum class EPoppedTireReactionStates : uint8
{
	None                                     = 0,
	VeerLeft                                 = 1,
	VeerRight                                = 2,
	Wiggle                                   = 3,
	Yaw90                                    = 4,
	FlipPitch                                = 5,
	FlipRoll                                 = 6,
	EPoppedTireReactionStates_MAX            = 7,
};

// Enum ValetRuntime.EFuelLeakType
// NumValues: 0x0003
enum class EFuelLeakType : uint8
{
	None                                     = 0,
	GenericFromBetweenRearTires              = 1,
	EFuelLeakType_MAX                        = 2,
};

// Enum ValetRuntime.ETireStates
// NumValues: 0x0003
enum class ETireStates : uint8
{
	Default                                  = 0,
	Popped                                   = 1,
	ETireStates_MAX                          = 2,
};

// Enum ValetRuntime.EControlsPrototypes
// NumValues: 0x0005
enum class EControlsPrototypes : uint8
{
	CameraSteering                           = 0,
	NonCameraSteering                        = 1,
	HybridCameraSteering                     = 2,
	MaxCount                                 = 3,
	EControlsPrototypes_MAX                  = 4,
};

// ScriptStruct ValetRuntime.CachedWaterData
// 0x0038 (0x0038 - 0x0000)
struct FCachedWaterData final
{
public:
	struct FVector                                PlaneLocation;                                     // 0x0000(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PlaneNormal;                                       // 0x000C(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SurfacePosition;                                   // 0x0018(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WaterVelocity;                                     // 0x0024(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Depth;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WaterBodyIndex;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ValetRuntime.ValetUpdateContext
// 0x0014 (0x0014 - 0x0000)
struct alignas(0x04) FValetUpdateContext final
{
public:
	uint8                                         Pad_0[0x14];                                       // 0x0000(0x0014)(Fixing Struct Size After Last Property [ Dumper-8 ])
};

// ScriptStruct ValetRuntime.VehiclePropReplacementData
// 0x0040 (0x0040 - 0x0000)
struct FVehiclePropReplacementData final
{
public:
	TSoftObjectPtr<class UFortVehicleItemDefinition> FortVehicleItemDefinition;                      // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TransOffset;                                       // 0x0028(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RotOffset;                                         // 0x0034(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

}

